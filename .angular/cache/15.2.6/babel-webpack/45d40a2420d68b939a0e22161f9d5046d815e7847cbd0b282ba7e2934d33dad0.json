{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  registerByForm(registerFormData) {\n    return this.http.post(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/auth/client/register\", {\n      name: registerFormData.name,\n      email: registerFormData.email,\n      phone: registerFormData.phone,\n      password: registerFormData.password\n    });\n  }\n  signInByForm(signInData) {\n    return this.http.post(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/auth/login\", {\n      login: signInData.email,\n      password: signInData.password\n    });\n  }\n  getClientProfile() {\n    let token = localStorage.getItem(\"token\");\n    return this.http.get(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/profile\", {\n      headers: {\n        'Authorization': `Bearer ${JSON.parse(token).accessToken}`\n      }\n    });\n  }\n  deleteAccount() {\n    let token = localStorage.getItem(\"token\");\n    return this.http.delete(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/profile\", {\n      headers: {\n        'Authorization': `Bearer ${JSON.parse(token).accessToken}`\n      }\n    });\n  }\n  addNewCard(cardData) {\n    return this.http.post(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/payments\", {\n      cardNumber: cardData.cardNumber,\n      date: cardData.cardData,\n      cvv: +cardData.cardCvv\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;;;AAejD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAc,CAACC,gBAAgC;IAC7C,OAAO,IAAI,CAACF,IAAI,CACbG,IAAI,CACH,gFAAgF,EAChF;MACEC,IAAI,EAAEF,gBAAgB,CAACE,IAAI;MAC3BC,KAAK,EAAEH,gBAAgB,CAACG,KAAK;MAC7BC,KAAK,EAAEJ,gBAAgB,CAACI,KAAK;MAC7BC,QAAQ,EAAEL,gBAAgB,CAACK;KAC5B,CAAC;EACR;EAEAC,YAAY,CAACC,UAA+C;IAC1D,OAAO,IAAI,CAACT,IAAI,CACbG,IAAI,CACH,sEAAsE,EACtE;MACEO,KAAK,EAAED,UAAU,CAACJ,KAAK;MACvBE,QAAQ,EAAEE,UAAU,CAACF;KACtB,CACF;EACL;EAEAI,gBAAgB;IACd,IAAIC,KAAK,GAAQC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC9C,OAAO,IAAI,CAACd,IAAI,CACbe,GAAG,CACF,2EAA2E,EAC3E;MACEC,OAAO,EAAE;QAAE,eAAe,EAAE,UAAUC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,CAACO,WAAW;MAAE;KACtE,CAAC;EACR;EAEAC,aAAa;IACX,IAAIR,KAAK,GAAQC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC9C,OAAO,IAAI,CAACd,IAAI,CACbqB,MAAM,CAAC,2EAA2E,EACjF;MAAEL,OAAO,EAAE;QAAE,eAAe,EAAE,UAAUC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,CAACO,WAAW;MAAE;IAAE,CAAE,CAC5E;EACL;EAEAG,UAAU,CAACC,QAAa;IACtB,OAAO,IAAI,CAACvB,IAAI,CAACG,IAAI,CACC,4EAA4E,EAC5E;MACEqB,UAAU,EAAED,QAAQ,CAACC,UAAU;MAC/BC,IAAI,EAAEF,QAAQ,CAACA,QAAQ;MACvBG,GAAG,EAAE,CAACH,QAAQ,CAACI;KAChB,CACF;EACvB;;AAtDW7B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA8B,SAAX9B,WAAW;EAAA+B,YAHV;AAAM","names":["HttpClient","AuthService","constructor","http","registerByForm","registerFormData","post","name","email","phone","password","signInByForm","signInData","login","getClientProfile","token","localStorage","getItem","get","headers","JSON","parse","accessToken","deleteAccount","delete","addNewCard","cardData","cardNumber","date","cvv","cardCvv","factory","providedIn"],"sourceRoot":"","sources":["/Users/admin1/Projects/Frontend/app/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\ninterface registerClient {\n  name: string,\n  email: string,\n  phone: string,\n  password: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  registerByForm(registerFormData: registerClient): Observable<any> {\n    return this.http\n      .post(\n        \"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/auth/client/register\",\n        {\n          name: registerFormData.name,\n          email: registerFormData.email,\n          phone: registerFormData.phone,\n          password: registerFormData.password\n        })\n  }\n\n  signInByForm(signInData: { email: string, password: string }): Observable<any> {\n    return this.http\n      .post(\n        \"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/auth/login\",\n        {\n          login: signInData.email,\n          password: signInData.password\n        }\n      )\n  }\n\n  getClientProfile(): Observable<any> {\n    let token: any = localStorage.getItem(\"token\");\n    return this.http\n      .get(\n        \"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/profile\",\n        {\n          headers: { 'Authorization': `Bearer ${JSON.parse(token).accessToken}` }\n        })\n  }\n\n  deleteAccount(): Observable<any> {\n    let token: any = localStorage.getItem(\"token\")\n    return this.http\n      .delete(\"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/profile\",\n        { headers: { 'Authorization': `Bearer ${JSON.parse(token).accessToken}` } }\n      )\n  }\n\n  addNewCard(cardData: any): Observable<any> {\n    return this.http.post(\n                          \"https://g2tlvj30j0.execute-api.eu-central-1.amazonaws.com/clients/payments\",\n                          {\n                            cardNumber: cardData.cardNumber,\n                            date: cardData.cardData,\n                            cvv: +cardData.cardCvv\n                          }\n                        )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}